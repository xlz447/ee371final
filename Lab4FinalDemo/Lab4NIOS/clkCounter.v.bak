module clkCounter(clk, rst, out);
	input clk, rst;
	output out;
	wire [3:0] nc, PS;
	reg [3:0] NS, c;
	
	always @(PS)
		begin 
			if (PS < 9) NS = PS + 1;
			else NS = 0;
			c = PS;
		end
		
	DFlipFlop dff0(PS[0], nc[0], NS[0], clk, rst);
	DFlipFlop dff1(PS[1], nc[1], NS[1], clk, rst);
	DFlipFlop dff2(PS[2], nc[2], NS[2], clk, rst);
	DFlipFlop dff3(PS[3], nc[3], NS[3], clk, rst);

	assign out = ~c[3] & ~c[2] | c[2] & ~c[1] & ~c[0];
	
endmodule 

//module tb();
//	reg clk, rst;
//	wire out;
//	
//	parameter period = 100;
//	
//	initial clk = 0;
//	always #(period /2) clk = ~ clk;
//	
//	clkCounter cc (clk, rst, out);
//	
//	initial begin
//		rst = 1;
//		#period rst = 0;
//		#(35*period);
//		$stop();
//	end
//	
//endmodule 