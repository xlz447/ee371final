module BIC (en, rst, clk, out);
	input en, rst, clk;
	output [3:0] out;
	wire [3:0] c, nc;
	wire enBar;
	
	not n1 (enBar, en);
	assign c[3] = out[3] & ~out[2] | out[3] & ~out[1] | out[3] & ~out[0] | ~out[3] & out[2] & out[1] & out[0];
	assign c[2] = out[2] & ~out[1] | out[2] & ~out[0] | ~out[2] & out[1] & out[0];
	assign c[1] = ~out[1] & out[0] | out[1] & ~out[0];
	assign c[0] = ~out[0];
	
	DFlipFlop dff0(out[0], nc[0], c[0], clk, enBar | rst);
	DFlipFlop dff1(out[1], nc[1], c[1], clk, enBar | rst);
	DFlipFlop dff2(out[2], nc[2], c[2], clk, enBar | rst);
	DFlipFlop dff3(out[3], nc[3], c[3], clk, enBar | rst);
	
endmodule 